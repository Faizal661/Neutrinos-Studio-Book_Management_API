[
    {
        "id": "SSD_SERVICE_ID_sd_Cai4hEDise9lBbSA",
        "type": "tab",
        "createdDate": "2025-09-09T07:39:10.958Z",
        "label": "get_pdf_report",
        "disabled": false,
        "info": "",
        "functionSeq": 0,
        "generateNext": true,
        "serviceName": "get_pdf_report",
        "relativeParentPath": "audits_logs"
    },
    {
        "id": "sd_Uhfjw7ksyDPV8QOZ",
        "type": "HttpIn",
        "z": "SSD_SERVICE_ID_sd_Cai4hEDise9lBbSA",
        "viewType": "server",
        "nodeType": "start",
        "name": "get_pdf_report",
        "path": "/audits/report/pdf",
        "uploadpath": "",
        "summary": "",
        "description": "",
        "method": "get",
        "sequenceId": "IDSAuthroizedAPIs",
        "consumes": "",
        "produces": "",
        "filetype": "path",
        "acceptFileUpload": false,
        "useDataModel": false,
        "dataModelIsArray": false,
        "erd": "",
        "erdName": "",
        "entity": "",
        "entityId": "",
        "ref": "",
        "editableListData": {
            "responses": [],
            "params": [],
            "produces": [],
            "consumes": []
        },
        "inputs": 0,
        "outputs": 1,
        "validateRequestUsingSwaggerDocs": false,
        "category": "HTTP",
        "x": 105,
        "y": 180,
        "wires": [
            [
                "sd_596lQy08yPyPso25"
            ]
        ],
        "__ssdTypeInputs__": {
            "uploadpath": {
                "type": "str",
                "value": "",
                "nullable": "true",
                "nullableValue": "",
                "constant": false
            }
        },
        "__n_excludedFromValidation__": {},
        "generateNext": true,
        "serviceName": "get_pdf_report",
        "functionName": "sd_Uhfjw7ksyDPV8QOZ"
    },
    {
        "id": "sd_L7TfufX3NTSAyO8t",
        "type": "HttpOut",
        "z": "SSD_SERVICE_ID_sd_Cai4hEDise9lBbSA",
        "viewType": "server",
        "nodeType": "flow",
        "name": "",
        "headers": {
            "Content-Type": "application/pdf",
            "Content-Disposition": "attachment; filename=\"audit-report.pdf\""
        },
        "responseBody": {
            "type": "str",
            "value": "audit-report.pdf",
            "ssd_typedInputField": true
        },
        "httpcode": {
            "type": "num",
            "value": 200,
            "ssd_typedInputField": true
        },
        "responseType": "file",
        "swaggerResponse": {},
        "responseMapping": {
            "status": {
                "type": "num",
                "value": 200,
                "ssd_typedInputField": true
            },
            "file": {
                "type": "str",
                "value": "audit-report.pdf",
                "ssd_typedInputField": true
            }
        },
        "dataModelIsArray": false,
        "cookies": [],
        "inputs": 1,
        "outputs": 0,
        "erd": "",
        "entity": "",
        "entityId": "",
        "ref": "",
        "editableListData": {
            "headers": [
                {
                    "key": "Content-Type",
                    "value": "application/pdf",
                    "rowId": "sd_rgLHcNAyejT40EKl",
                    "valid": true
                },
                {
                    "key": "Content-Disposition",
                    "value": "attachment; filename=\"audit-report.pdf\"",
                    "rowId": "sd_z3EeHQwqb3cu6OWl",
                    "valid": true
                }
            ],
            "produces": [],
            "responses": []
        },
        "cookiesList": {},
        "switchStates": {
            "headers": "Map",
            "cookies": "Map"
        },
        "functionName": "sd_L7TfufX3NTSAyO8t",
        "category": "HTTP",
        "x": 605,
        "y": 180,
        "wires": [],
        "__n_excludedFromValidation__": {},
        "generateNext": true,
        "serviceName": "get_pdf_report"
    },
    {
        "id": "sd_kaY02o3IP1brFCw0",
        "type": "Script",
        "z": "SSD_SERVICE_ID_sd_Cai4hEDise9lBbSA",
        "viewType": "common",
        "nodeType": "flow",
        "name": "",
        "script": "console.log(\"bh.local.userInfo ====>\",bh.local.userInfo)\nbh.local.username=bh.local.userInfo?.data?.userInfo?.username\nconsole.log(\"username ====>\",bh.local.username)\n\nconsole.log(\"query  === \", bh.input.query);\n\nif(bh.input.query?.startDate==='null'){\n  bh.input.query.startDate=JSON.stringify(new Date(null))\n}\n\nlet operations = bh.input.query?.operations ? JSON.parse(bh.input.query.operations) : [];\nlet startDate = bh.input.query?.startDate ? new Date(JSON.parse(bh.input.query.startDate)) : null;\nlet endDate = bh.input.query?.endDate ? new Date(JSON.parse(bh.input.query.endDate)) : null;\n\n\nconst filter = {};\n\nif (operations && operations.length > 0) {\n  filter['operation'] = { '$in': operations };\n}\n\nif (isValidDate(startDate) && isValidDate(endDate)) {\n  filter['timestamp'] = { '$gte': JSON.parse(bh.input.query.startDate), '$lte': JSON.parse(bh.input.query.endDate) };\n}\n\n\nfunction isValidDate(date) {\n  return date instanceof Date && !isNaN(date);\n}\n\n\nbh.local.filter = filter;\n\nconsole.log('filter = = = =', bh.local.filter )\n",
        "functionName": "sd_kaY02o3IP1brFCw0",
        "category": "Function",
        "x": 305,
        "y": 180,
        "wires": [
            [
                "sd_6MiQeYcc0ZsvjZIx"
            ]
        ],
        "__n_excludedFromValidation__": {},
        "generateNext": false,
        "serviceName": "get_pdf_report",
        "generated": true
    },
    {
        "id": "sd_6MiQeYcc0ZsvjZIx",
        "type": "Mongodb",
        "z": "SSD_SERVICE_ID_sd_Cai4hEDise9lBbSA",
        "viewType": "server",
        "nodeType": "flow",
        "name": "",
        "databaseConfig": "sd_SsGwZHR2Z3WiKBs9",
        "collection": "\"audits\"",
        "options": "bh.web",
        "resultMapping": "bh.local.resultData",
        "operation": "find",
        "argumentArray": [
            "query",
            "options"
        ],
        "aggregate": "bh.local.pipeline",
        "operations": "",
        "query": "bh.local.filter",
        "fieldOrSpec": "",
        "filter": "",
        "key": "",
        "docId": "",
        "indexName": "",
        "replacement": "",
        "update": "",
        "xAxis": "",
        "yAxis": "",
        "indexes": "",
        "docs": "",
        "document": "",
        "newName": "",
        "doc": "",
        "filePath": "",
        "fileName": "",
        "pipeline": "",
        "functionName": "sd_6MiQeYcc0ZsvjZIx",
        "category": "Storage",
        "x": 405,
        "y": 180,
        "wires": [
            [
                "sd_QkDEbXzbSHIJSFYk",
                "sd_r7CHKXCDB6QDiUNY"
            ]
        ],
        "__ssdTypeInputs__": {
            "collection": {
                "type": "str",
                "value": "audits",
                "constant": false
            },
            "options": {
                "type": "bh",
                "value": "web",
                "constant": false
            },
            "resultMapping": {
                "type": "bh.local",
                "value": "resultData",
                "constant": false
            },
            "query": {
                "type": "bh.local",
                "value": "filter",
                "constant": false
            },
            "aggregate": {
                "type": "bh.local",
                "value": "pipeline",
                "constant": false
            }
        },
        "__n_excludedFromValidation__": {},
        "generateNext": false,
        "serviceName": "get_pdf_report",
        "generated": true
    },
    {
        "id": "sd_gwBtp0TuE7cbJQiB",
        "type": "Catch",
        "z": "SSD_SERVICE_ID_sd_Cai4hEDise9lBbSA",
        "viewType": "common",
        "nodeType": "start",
        "name": "catch_node",
        "selectedNodes": "all-nodes",
        "selectCatchType": "allnodes",
        "masternodeList": "",
        "ignoreList": [
            "sd_VoNMKw7spVnGneki"
        ],
        "functionName": "catchNode",
        "category": "General",
        "x": 545,
        "y": 300,
        "wires": [
            [
                "sd_VoNMKw7spVnGneki"
            ]
        ],
        "__n_excludedFromValidation__": {},
        "generateNext": true,
        "serviceName": "get_pdf_report"
    },
    {
        "id": "sd_VoNMKw7spVnGneki",
        "type": "HttpOut",
        "z": "SSD_SERVICE_ID_sd_Cai4hEDise9lBbSA",
        "viewType": "server",
        "nodeType": "flow",
        "name": "",
        "headers": {},
        "responseBody": {
            "type": "str",
            "value": "Failed to generate pdf report.",
            "ssd_typedInputField": true
        },
        "httpcode": {
            "type": "num",
            "value": 500,
            "ssd_typedInputField": true
        },
        "responseType": "obj",
        "swaggerResponse": {},
        "responseMapping": {
            "status": 500,
            "obj": "\"Failed to generate pdf report.\"",
            "send": "\"Failed to generate pdf report.\""
        },
        "dataModelIsArray": false,
        "cookies": [],
        "inputs": 1,
        "outputs": 0,
        "erd": "",
        "entity": "",
        "entityId": "",
        "ref": "",
        "editableListData": {
            "headers": [],
            "produces": [],
            "responses": []
        },
        "cookiesList": {},
        "switchStates": {
            "headers": "Map",
            "cookies": "Map"
        },
        "functionName": "sd_VoNMKw7spVnGneki",
        "category": "HTTP",
        "x": 685,
        "y": 300,
        "wires": [],
        "__n_excludedFromValidation__": {},
        "generateNext": false,
        "serviceName": "get_pdf_report",
        "generated": true
    },
    {
        "id": "sd_QkDEbXzbSHIJSFYk",
        "type": "Script",
        "z": "SSD_SERVICE_ID_sd_Cai4hEDise9lBbSA",
        "viewType": "common",
        "nodeType": "flow",
        "name": "",
        "script": "console.log('resultData of pdf generate === ', bh.local.resultData)\n\nconst puppeteer = require(\"puppeteer\");\n\n(async function () {\n  await generateAuditPDF(bh.local.resultData, \"audit-report.pdf\");\n\n  bh.web.res.setHeader(\"Content-Type\", \"application/pdf\");\n  bh.web.res.setHeader(\n    \"Content-Disposition\",\n    'attachment; filename=\"audit-report.pdf\"',\n  );\n  bh.web.res.sendFile(\"audit-report.pdf\", { root: \".\" });\n})()\n\nasync function generateAuditPDF(filteredAudits, pdfPath) {\n  const htmlContent = generateHTML(filteredAudits);\n  const browser = await puppeteer.launch();\n  const page = await browser.newPage();\n\n  await page.setContent(htmlContent);\n  await page.pdf({\n    format: \"A4\",\n    printBackground: true,\n    path: pdfPath,\n  });\n  await browser.close();\n}\n\n\nfunction generateHTML(audits) {\n  return `\n    <!DOCTYPE html>\n    <html lang=\"en\">\n    <head>\n      <meta charset=\"UTF-8\">\n      <title>Audit Report</title>\n      <style>\n        body { font-family: Arial, sans-serif; margin: 20px; }\n        h1 { text-align: center; }\n        table { width: 100%; border-collapse: collapse; margin-top: 20px; }\n        th, td { border: 1px solid #ddd; padding: 8px; text-align: left; }\n        th { background-color: #f4f4f4; }\n        tr:nth-child(even) { background-color: #f9f9f9; }\n      </style>\n    </head>\n    <body>\n      <h1>Audit Report</h1>\n      <table>\n        <thead>\n          <tr>\n            <th>ID</th>\n            <th>Timestamp</th>\n            <th>Operation</th>\n            <th>Resource ID</th>\n            <th>User ID</th>\n          </tr>\n        </thead>\n        <tbody>\n          ${audits\n      .map(\n        (audit,index) => `\n            <tr>\n              <td>${index+1}</td>\n              <td>${audit.timestamp}</td>\n              <td>${audit.operation}</td>\n              <td>${audit.resourceId !== null ? audit.resourceId : \"N/A\"}</td>\n              <td>${audit.userId || \"N/A\"}</td>\n            </tr>\n          `,\n      )\n      .join(\"\")}\n        </tbody>\n      </table>\n    </body>\n    </html>\n  `;\n}",
        "functionName": "sd_QkDEbXzbSHIJSFYk",
        "category": "Function",
        "x": 505,
        "y": 180,
        "wires": [
            []
        ],
        "__n_excludedFromValidation__": {},
        "generateNext": false,
        "serviceName": "get_pdf_report",
        "generated": true
    },
    {
        "id": "sd_596lQy08yPyPso25",
        "type": "Session",
        "z": "SSD_SERVICE_ID_sd_Cai4hEDise9lBbSA",
        "viewType": "server",
        "nodeType": "flow",
        "name": "userInfo",
        "operationType": "get",
        "data": "",
        "resultMapping": "bh.local.userInfo",
        "dataMapping": "bh",
        "functionName": "userInfo",
        "category": "HTTP",
        "x": 205,
        "y": 180,
        "wires": [
            [
                "sd_kaY02o3IP1brFCw0"
            ]
        ],
        "__ssdTypeInputs__": {
            "resultMapping": {
                "type": "bh.local",
                "value": "userInfo",
                "constant": false
            },
            "dataMapping": {
                "type": "bh",
                "value": "",
                "constant": false
            }
        },
        "__n_excludedFromValidation__": {},
        "generateNext": false,
        "serviceName": "get_pdf_report",
        "generated": true
    },
    {
        "id": "sd_r7CHKXCDB6QDiUNY",
        "type": "Script",
        "z": "SSD_SERVICE_ID_sd_Cai4hEDise9lBbSA",
        "viewType": "common",
        "nodeType": "flow",
        "name": "audit-logs",
        "script": "bh.local.insertAuditURL = `http://localhost:8081/api/audits`;\n\nbh.local.auditDocument = {\n  timestamp: new Date(),\n  operation: \"GENERATE_PDF\",\n  resourceId: \"N/A\",\n  userId: bh.local?.username || \"N/A\"\n}",
        "functionName": "auditLogs",
        "category": "Function",
        "x": 505,
        "y": 60,
        "wires": [
            [
                "sd_OBJLGHYDHoZhsK9e"
            ]
        ],
        "__n_excludedFromValidation__": {},
        "generateNext": false,
        "serviceName": "get_pdf_report",
        "generated": true
    },
    {
        "id": "sd_OBJLGHYDHoZhsK9e",
        "type": "ServerHttpRequest",
        "z": "SSD_SERVICE_ID_sd_Cai4hEDise9lBbSA",
        "viewType": "server",
        "nodeType": "flow",
        "name": "audit http req",
        "method": "post",
        "methodMappingObj": {},
        "urlMapping": "bh.local.insertAuditURL",
        "urlMappingObj": {
            "mapVarType": "bh.local",
            "mapVarValue": "insertAuditURL"
        },
        "ret": "json",
        "retMappingObj": {},
        "reqBody": "bh.local.auditDocument",
        "reqBodyObj": {
            "mapVarType": "bh.local",
            "mapVarValue": "auditDocument"
        },
        "resultMapping": "bh.local.audit_save_response",
        "resultMappingObj": {
            "mapVarType": "bh.local",
            "mapVarValue": "audit_save_response"
        },
        "headers": {},
        "headersObj": [],
        "headerMappingObj": {},
        "params": {},
        "paramsObj": [],
        "paramMappingObj": {},
        "useAuthTypeMappingObj": {},
        "useAuthUsername": "",
        "useAuthUsernameMappingObj": "",
        "useAuthPassword": "",
        "useAuthPasswordMappingObj": "",
        "useAuthToken": "",
        "useAuthTokenMappingObj": "",
        "useQueryString": false,
        "tls": "",
        "followRedirect": false,
        "paytoqs": false,
        "useAuthentication": false,
        "rejectUnauthorized": false,
        "proxy": "",
        "useProxy": false,
        "usetls": false,
        "cookiesMapObj": {},
        "cookiesList": {},
        "switchStates": {
            "cookies": "Map"
        },
        "editableListData": {},
        "timeout": {
            "type": "num",
            "value": ""
        },
        "functionName": "auditHttpReq",
        "category": "HTTP",
        "x": 605,
        "y": 60,
        "wires": [
            [
                "sd_KeuwTDMCAgHCVJ6p"
            ]
        ],
        "__n_excludedFromValidation__": {},
        "generateNext": false,
        "serviceName": "get_pdf_report",
        "generated": true
    },
    {
        "id": "sd_KeuwTDMCAgHCVJ6p",
        "type": "ServerLog",
        "z": "SSD_SERVICE_ID_sd_Cai4hEDise9lBbSA",
        "viewType": "server",
        "nodeType": "flow",
        "name": "audit log",
        "outputs": 0,
        "logObject": "bh.local.audit_save_response",
        "logLevel": "info",
        "functionName": "auditLog",
        "category": "General",
        "x": 705,
        "y": 60,
        "wires": [],
        "__ssdTypeInputs__": {
            "logObject": {
                "type": "bh.local",
                "value": "audit_save_response",
                "constant": false
            }
        },
        "__n_excludedFromValidation__": {},
        "generateNext": false,
        "serviceName": "get_pdf_report",
        "generated": true
    }
]
